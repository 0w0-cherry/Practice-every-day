一.抽象类
1.定义：包含了纯虚函数的类
2.特点：不能实例化出对象
3.作用：简介强制派生类重写虚函数（否则纯虚函数会继承到派生类）
4.对比override：
（1）override用于检查语法，检查是否重写了虚函数，写在派生类
（2）简介强制强制派生类重写虚函数，写在基类
class Car
{
public:
//纯虚函数
    virtual void Drive() = 0;
};
class BMW :public Car
{
public:
    virtual void Drive()
    {
    cout << " " << endl;
    }
};
二.基础概念
1.多态调用:运行时，到指向对象的虚表中找虚函类调用，指向父类调用父类的虚函数，指向子类调用子类的虚函数
2.普通调用:编译时，调用对象是哪个类型，就调用他的函数
3.虚表:虚函数表，存的虚函数，目标实现多态
4.虚基表:存的当前位置距离虚基类部分的偏移量，解决菱形继承数据冗余和二义性
5.虚函数与普通函数都存在代码段，不存在虚表。虚表存放的是虚函数的地址，虚表存在
6.进程与函数都会转化为指令，类不会转化为指令，但类实例化出的对象会转化为指令
